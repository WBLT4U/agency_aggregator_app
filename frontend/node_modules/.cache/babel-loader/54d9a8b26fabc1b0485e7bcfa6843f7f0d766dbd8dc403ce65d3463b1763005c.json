{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\agency-aggregator\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AdminDashboard from '../components/AdminDashboard';\nimport AgencyDashboard from '../components/AgencyDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [role, setRole] = React.useState(null);\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    // Fetch user role from the backend or check from localStorage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // If not logged in, redirect to login page\n    } else {\n      // In a real app, you'd fetch the user role from the server here\n      const fetchUserRole = async () => {\n        // Fetch the user profile and extract the role\n        const response = await fetch('http://localhost:5000/api/agency/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setRole(data.role);\n      };\n      fetchUserRole();\n    }\n  }, [navigate]);\n\n  // Logout Function: Clears the token and redirects to login\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  if (!role) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: role === 'admin' ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(AgencyDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DBEsBZBQGR1eGj4Fptndyb3iGwQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useNavigate","AdminDashboard","AgencyDashboard","jsxDEV","_jsxDEV","Dashboard","_s","role","setRole","useState","navigate","useEffect","token","localStorage","getItem","fetchUserRole","response","fetch","headers","Authorization","data","json","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["c:/xampp/htdocs/agency-aggregator/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AdminDashboard from '../components/AdminDashboard';\nimport AgencyDashboard from '../components/AgencyDashboard';\n\nconst Dashboard = () => {\n  const [role, setRole] = React.useState(null);\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Fetch user role from the backend or check from localStorage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // If not logged in, redirect to login page\n    } else {\n      // In a real app, you'd fetch the user role from the server here\n      const fetchUserRole = async () => {\n        // Fetch the user profile and extract the role\n        const response = await fetch('http://localhost:5000/api/agency/profile', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const data = await response.json();\n        setRole(data.role);\n      };\n      fetchUserRole();\n    }\n  }, [navigate]);\n\n  // Logout Function: Clears the token and redirects to login\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  if (!role) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <header>\n        <button onClick={handleLogout}>Logout</button>\n      </header>\n      <main>\n        {role === 'admin' ? <AdminDashboard /> : <AgencyDashboard />}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,KAAK,CAACY,SAAS,CAAC,MAAM;IACpB;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVF,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACL;MACA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAC9C,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,OAAO,CAACY,IAAI,CAACb,IAAI,CAAC;MACpB,CAAC;MACDQ,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCb,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,IAAI,CAACH,IAAI,EAAE,oBAAOH,OAAA;IAAAoB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnC,oBACExB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAQyB,OAAO,EAAEP,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACTxB,OAAA;MAAAoB,QAAA,EACGjB,IAAI,KAAK,OAAO,gBAAGH,OAAA,CAACH,cAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGxB,OAAA,CAACF,eAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,SAAS;EAAA,QAEIL,WAAW;AAAA;AAAA8B,EAAA,GAFxBzB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}